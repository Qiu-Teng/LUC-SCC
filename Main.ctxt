#BlueJ class context
comment0.target=Main
comment0.text=\r\n\ The\ Main\ class\ represents\ the\ entry\ point\ of\ the\ chess-like\ game\ program.\ It\ contains\ the\ main\ method\r\n\ and\ implements\ the\ game\ logic\ and\ user\ interface.\ The\ game\ board\ and\ player\ actions\ are\ managed\ within\r\n\ this\ class.\r\n\r\n\ <p>\r\n\ Attributes\:\r\n\ -\ players\:\ The\ list\ of\ Player\ instances\ representing\ the\ players\ of\ the\ game.\r\n\ -\ currentPlayId\:\ The\ index\ of\ the\ current\ player\ in\ the\ players\ list.\r\n\ -\ oper\:\ The\ current\ operation\ type.\ 1\ for\ rolling\ the\ dice,\ 2\ for\ moving\ the\ chess\ piece,\ 3\ for\ using\ a\ card.\r\n\ -\ result\:\ The\ result\ of\ the\ dice\ roll.\r\n\ -\ skipPlayerList\:\ The\ list\ of\ players\ who\ are\ restricted\ from\ playing\ their\ turn.\r\n\ -\ circleChessList\:\ The\ list\ of\ ChessCell\ instances\ representing\ the\ circular\ game\ board.\r\n\ -\ cardPane\:\ The\ pane\ used\ to\ display\ cards\ during\ the\ game.\r\n\ -\ cardLabel\:\ The\ label\ used\ to\ display\ card\ information.\r\n\r\n\ <p>\r\n\ Methods\:\r\n\ -\ circleChess()\:\ Creates\ the\ circular\ game\ board\ by\ positioning\ ChessCell\ instances.\r\n\ -\ homeChess(double\ startX,\ double\ startY,\ String\ dir)\:\ Constructs\ the\ "HOME"\ area\ ChessCell\ instances.\r\n\ -\ startChess(Image\ image,\ double\ startX,\ double\ startY,\ String\ dir)\:\ Creates\ Chess\ instances\ with\ images\ and\ starting\ positions.\r\n\ -\ onSelectChess(MouseEvent\ event)\:\ Handles\ the\ mouse\ click\ event\ on\ a\ Chess\ instance.\r\n\ -\ moveChess(Chess\ chess,\ Integer\ result)\:\ Moves\ the\ Chess\ piece\ based\ on\ the\ dice\ result.\r\n\ -\ moveTransition(Chess\ chess,\ ChessCell\ chessCell)\:\ Performs\ the\ transition\ animation\ to\ move\ the\ Chess.\r\n\ -\ moveToStart(Chess\ oldChess)\:\ Moves\ an\ existing\ Chess\ piece\ to\ the\ starting\ area.\r\n\ -\ chessCard(Chess\ chess)\:\ Handles\ the\ chess\ card\ event.\r\n\ -\ getPlayer()\:\ Retrieves\ the\ player\ who\ is\ rolling\ the\ dice.\r\n\ -\ nextPlayer()\:\ Moves\ the\ game\ to\ the\ next\ player\ and\ performs\ necessary\ actions.\r\n\ -\ startChessCell(double\ startX,\ double\ startY,\ String\ dir)\:\ Constructs\ ChessCell\ instances\ with\ starting\ coordinates.\r\n\ -\ buildMenu(String\ text,\ EventHandler<ActionEvent>\ e)\:\ Builds\ a\ menu\ button\ with\ the\ specified\ text\ and\ event\ handler.\r\n\ -\ setAnchor(Node\ node,\ Double\ top,\ Double\ left,\ Double\ right,\ Double\ bottom)\:\ Sets\ the\ anchor\ properties\ of\ a\ Node.\r\n\ -\ main(String[]\ args)\:\ The\ main\ method\ of\ the\ Java\ program.\r\n\ References\:\r\n\ -\ https\://github.com/bayooow/Triwizard-MazeGame\r\n\ -\ https\://github.com/Eluny/FlyingChess\r\n\ -\ https\://github.com/hugeBlack/flyingChess\r\n\ -\ https\://github.com/apriljdai/Chinese-Flying-Chess\r\n\ -\ https\://github.com/lizi003/planegame\r\n\ -\ https\://github.com/WendellGul/FlyingChess\r\n\ \r\n\ @author\ Qiu\ Teng\ (Project\ Leader,BJTU\ ID\ 21726062)\r\n\ \r\n\ \ \ \ \ \ \ \ \ (Design\ and\ implement\ code)\r\n\ \ \ \ \ \ \ \ \ BJTU\ ID\ 21726062\r\n\ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ Li\ Shaoxu\r\n\ \ \ \ \ \ \ \ \ Develop\ more\ function\ and\ version\ control\r\n\ \ \ \ \ \ \ \ \ BJTU\ ID\ 21722009\r\n\ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ Li\ Yuge\r\n\ \ \ \ \ \ \ \ \ Version\ control\ and\ ensure\ that\ testing\ activities\ align\ with\ project\ goals\r\n\ \ \ \ \ \ \ \ \ BJTU\ ID\ 21722012\r\n\ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ Kuang\ Xun\r\n\ \ \ \ \ \ \ \ \ Test\ software,\ write\ report\ and\ comment\r\n\ \ \ \ \ \ \ \ \ BJTU\ ID\ 21722008\r\n\ \ \ \ \ \ \ \ \ \r\n\ @version\ 2.0\ \ \ \ \ \r\n
comment1.params=primaryStage
comment1.target=void\ start(javafx.stage.Stage)
comment1.text=\r\n\ Entry\ point\ of\ the\ JavaFX\ application.\r\n\ Sets\ up\ the\ main\ menu\ and\ initializes\ the\ game\ when\ a\ player\ chooses\ the\ number\ of\ players.\r\n\ \r\n\ @param\ primaryStage\ The\ primary\ stage\ of\ the\ JavaFX\ application.\r\n\ @throws\ Exception\ if\ an\ error\ occurs\ during\ the\ application's\ start.\r\n\ @author\ Qiu\ Teng\ 21726062\r\n\ @version\ 2.0\r\n
comment10.params=startX\ startY\ dir
comment10.target=java.util.List\ homeChess(double,\ double,\ java.lang.String)
comment10.text=\r\n\ Constructs\ a\ list\ of\ ChessCell\ instances\ representing\ the\ "HOME"\ area.\r\n\ Each\ ChessCell\ instance\ is\ assigned\ a\ corresponding\ letter\ from\ the\ "HOME"\ string\ array.\r\n\r\n\ @param\ startX\ The\ x-coordinate\ of\ the\ starting\ position\ for\ the\ ChessCell\ instances.\r\n\ @param\ startY\ The\ y-coordinate\ of\ the\ starting\ position\ for\ the\ ChessCell\ instances.\r\n\ @param\ dir\ The\ direction\ in\ which\ the\ ChessCell\ instances\ are\ derived.\r\n\ @return\ The\ constructed\ list\ of\ ChessCell\ instances\ representing\ the\ "HOME"\ area.\r\n
comment11.params=image\ startX\ startY\ dir
comment11.target=java.util.List\ startChess(javafx.scene.image.Image,\ double,\ double,\ java.lang.String)
comment11.text=\r\n\ This\ method\ constructs\ a\ list\ of\ Chess\ instances,\ each\ with\ a\ specified\ image\ and\ \r\n\ starting\ position.\ Each\ chess\ piece\ also\ has\ a\ mouse\ click\ event\ handler\ attached\ to\ it.\r\n\r\n\ @param\ image\ The\ Image\ instance\ to\ be\ associated\ with\ each\ Chess.\r\n\ @param\ startX\ The\ x-coordinate\ of\ the\ starting\ position\ for\ the\ chess.\r\n\ @param\ startY\ The\ y-coordinate\ of\ the\ starting\ position\ for\ the\ chess.\r\n\ @param\ dir\ The\ direction\ in\ which\ the\ chess\ instances\ are\ derived.\r\n\ @return\ The\ constructed\ list\ of\ Chess\ instances.\r\n
comment12.params=event
comment12.target=void\ onSelectChess(javafx.scene.input.MouseEvent)
comment12.text=\r\n\ Handles\ the\ mouse\ click\ event\ on\ a\ Chess\ instance.\r\n\ Performs\ various\ checks\ and\ actions\ based\ on\ the\ game\ rules.\r\n\r\n\ @param\ event\ The\ MouseEvent\ representing\ the\ mouse\ click\ event.\r\n
comment13.params=chess\ result
comment13.target=boolean\ moveChess(Chess,\ java.lang.Integer)
comment13.text=\r\n\ Moves\ the\ Chess\ piece\ based\ on\ the\ dice\ result.\r\n\r\n\ @param\ chess\ The\ Chess\ instance\ to\ be\ moved.\r\n\ @param\ result\ The\ result\ of\ the\ dice\ roll.\r\n\ @return\ true\ if\ the\ Chess\ was\ successfully\ moved,\ false\ otherwise.\r\n
comment14.params=chess\ chessCell
comment14.target=boolean\ moveTransition(Chess,\ ChessCell)
comment14.text=\r\n\ Performs\ the\ transition\ animation\ to\ move\ the\ Chess\ to\ a\ target\ ChessCell.\r\n\r\n\ @param\ chess\ The\ Chess\ instance\ to\ be\ moved.\r\n\ @param\ chessCell\ The\ target\ ChessCell\ to\ move\ the\ Chess\ to.\r\n\ @return\ true\ if\ the\ Chess\ was\ successfully\ moved,\ false\ otherwise.\r\n
comment15.params=oldChess
comment15.target=void\ moveToStart(Chess)
comment15.text=\r\n\ Moves\ the\ existing\ Chess\ piece\ to\ the\ starting\ area.\r\n\r\n\ @param\ oldChess\ The\ Chess\ instance\ to\ be\ moved.\r\n
comment16.params=chess
comment16.target=void\ chessCard(Chess)
comment16.text=\r\n\ Handles\ the\ chess\ card\ event.\r\n\ Displays\ a\ card\ with\ a\ random\ effect\ and\ performs\ corresponding\ actions.\r\n\r\n\ @param\ chess\ The\ Chess\ instance\ triggering\ the\ card\ event.\r\n
comment17.params=
comment17.target=Player\ getPlayer()
comment17.text=\r\n\ Retrieves\ the\ player\ who\ is\ rolling\ the\ dice.\r\n\ Displays\ a\ dialog\ to\ prompt\ the\ user\ to\ select\ the\ player.\r\n\ Returns\ the\ selected\ player.\r\n\r\n\ @return\ The\ selected\ Player\ instance.\r\n
comment18.params=
comment18.target=void\ nextPlayer()
comment18.text=\r\n\ Moves\ the\ game\ to\ the\ next\ player.\r\n\ Checks\ for\ game\ end\ conditions\ and\ performs\ necessary\ actions.\r\n
comment19.params=startX\ startY\ dir
comment19.target=java.util.List\ startChessCell(double,\ double,\ java.lang.String)
comment19.text=\r\n\ Constructs\ a\ list\ of\ ChessCell\ instances\ with\ the\ specified\ starting\ coordinates\ and\ direction.\r\n\r\n\ @param\ startX\ The\ x-coordinate\ of\ the\ starting\ position\ for\ the\ ChessCell\ instances.\r\n\ @param\ startY\ The\ y-coordinate\ of\ the\ starting\ position\ for\ the\ ChessCell\ instances.\r\n\ @param\ dir\ The\ direction\ in\ which\ the\ ChessCell\ instances\ are\ derived.\r\n\ @return\ The\ constructed\ list\ of\ ChessCell\ instances.\r\n
comment2.params=player
comment2.target=void\ startGame(int)
comment2.text=\r\n\ Begins\ the\ game.\r\n\ Initializes\ the\ game\ board\ and\ player\ pieces.\r\n\ @param\ player\ the\ number\ of\ players.\r\n
comment20.params=text\ e
comment20.target=javafx.scene.control.Button\ buildMenu(java.lang.String,\ javafx.event.EventHandler)
comment20.text=\r\n\ Builds\ a\ menu\ button\ with\ the\ specified\ text\ and\ event\ handler.\r\n\r\n\ @param\ text\ The\ text\ to\ be\ displayed\ on\ the\ menu\ button.\r\n\ @param\ e\ The\ event\ handler\ to\ be\ attached\ to\ the\ menu\ button.\r\n\ @return\ The\ constructed\ menu\ button.\r\n
comment21.params=node\ top\ left\ right\ bottom
comment21.target=void\ setAnchor(javafx.scene.Node,\ java.lang.Double,\ java.lang.Double,\ java.lang.Double,\ java.lang.Double)
comment21.text=\r\n\ Sets\ the\ anchor\ properties\ of\ a\ Node\ within\ an\ AnchorPane.\r\n\r\n\ @param\ node\ The\ Node\ to\ set\ the\ anchor\ properties\ for.\r\n\ @param\ top\ The\ top\ anchor\ value.\r\n\ @param\ left\ The\ left\ anchor\ value.\r\n\ @param\ right\ The\ right\ anchor\ value.\r\n\ @param\ bottom\ The\ bottom\ anchor\ value.\r\n
comment22.params=args
comment22.target=void\ main(java.lang.String[])
comment3.params=
comment3.target=void\ randomSieve()
comment3.text=\r\n\ Randomly\ rolls\ a\ die.\r\n\ Sets\ the\ 'result'\ variable\ to\ the\ outcome\ of\ the\ roll.\r\n
comment4.params=now
comment4.target=void\ handle(long)
comment5.params=
comment5.target=boolean\ isRun()
comment5.text=\r\n\ Checks\ if\ a\ player's\ piece\ can\ move.\r\n\ @return\ true\ if\ a\ player's\ piece\ can\ move;\ false\ otherwise.\r\n
comment6.params=text
comment6.target=void\ playerInfo(java.lang.String)
comment6.text=\r\n\ Appends\ a\ message\ to\ the\ information\ label\ in\ the\ GUI.\r\n\ @param\ text\ the\ text\ to\ append\ to\ the\ information\ label.\r\n
comment7.params=num
comment7.target=java.util.List\ initPlayer(int)
comment7.text=\r\n\ Initializes\ player\ pieces\ on\ the\ game\ board.\r\n\ @param\ num\ the\ number\ of\ players.\r\n\ @return\ a\ list\ of\ Player\ objects.\r\n
comment8.params=image\ chess\ homeChessCell\ startChessCell\ index
comment8.target=Player\ buildPlayer(javafx.scene.image.Image,\ java.util.List,\ java.util.List,\ java.util.List,\ int)
comment8.text=\r\n\ This\ method\ is\ used\ to\ build\ a\ Player\ object\ by\ setting\ its\ image,\ chess\ list,\ home\ list,\ \r\n\ start\ list,\ start\ index\ and\ end\ index.\ The\ function\ also\ connects\ all\ the\ chess\ pieces\ to\ the\ player.\r\n\r\n\ @param\ image\ -\ Image\ object\ to\ be\ set\ as\ the\ player's\ image\r\n\ @param\ chess\ -\ List\ of\ Chess\ objects\ which\ belong\ to\ the\ player\r\n\ @param\ homeChessCell\ -\ List\ of\ ChessCell\ objects\ which\ are\ the\ home\ cells\ of\ the\ player\r\n\ @param\ startChessCell\ -\ List\ of\ ChessCell\ objects\ which\ are\ the\ start\ cells\ of\ the\ player\r\n\ @param\ index\ -\ Index\ of\ the\ player\ which\ will\ be\ used\ to\ calculate\ the\ start\ index\ and\ end\ index\r\n\ @return\ Player\ object\ after\ it\ has\ been\ set\ up\r\n\ Qiu\ Teng\ 21726062\r\n
comment9.params=
comment9.target=java.util.List\ circleChess()
comment9.text=\r\n\ This\ method\ is\ used\ to\ create\ the\ game\ board.\ The\ board\ is\ circular\ and\ has\ 28\ cells.\r\n\ The\ cells\ are\ positioned\ by\ rotating\ the\ initial\ cell\ around\ a\ pivot\ point.\ Every\ 7\ cells,\ \r\n\ the\ rotation\ angle\ is\ increased\ by\ 90\ degrees.\ Certain\ cells\ are\ designated\ as\ card\ cells.\r\n\r\n\ @return\ List\ of\ ChessCell\ objects\ that\ form\ the\ game\ board\r\n
numComments=23
